
x-common-variables: &commonEnvironment
  PG_USER: postgres
  PG_PASSWORD: postgres
  PG_HOST: docker.host.internal
  PG_PORT: 5433
  PG_DB: postgres
  APP_HOST: "0.0.0.0"

services:
  db:   
    container_name: dozer-pagila-postgres
    image: debezium/postgres:15-alpine
    volumes:
      - ./pg_hba.conf:/var/lib/foo/pg_hba.conf
      - pgdata:/var/lib/postgresql/data
      # - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c hba_file=/var/lib/foo/pg_hba.conf
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      ALLOW_IP_RANGE: 0.0.0.0/0
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5 
  
  migrate:
    build: ./atlas
    
    command: >
      schema apply -u "postgresql://postgres:postgres@db:5432/postgres?sslmode=disable" --to file://schema.hcl  --auto-approve 

    depends_on:
      db:
        condition: service_healthy
    # volumes:
    #   - ./migrations/:/migrations
    environment:
      - PGUSER=postgres

  frontend:
    build: ./frontend
    ports:
      - "2300:80"


  backend:
    build: ./backend
    ports:
      - "2345:2345"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  


    


    environment:
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info




  dozer:
    container_name: dozer-build
    image: public.ecr.aws/getdozer/dozer:dev
    environment: *commonEnvironment
    working_dir: /usr/local/bin
    volumes:
      - ./dozer/dozer-config.yaml:/usr/local/bin/dozer-config.yaml
      - ./dozer/.dozer:/usr/local/bin/.dozer
    tty: true
    restart: always
    ports:
      # REST APIs are published on port 8080
      - "8080:8080"
      # gRPC are available over 50051
      - "50051:50051"




volumes:
  pgdata:

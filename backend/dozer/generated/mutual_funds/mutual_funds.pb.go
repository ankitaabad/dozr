// Dozer Generated for dozer.generated.mutual_funds

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: mutual_funds.proto

package mutual_funds

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for `count` and `query`.
type QueryMutualFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSON query string.
	Query *string `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *QueryMutualFundsRequest) Reset() {
	*x = QueryMutualFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mutual_funds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMutualFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMutualFundsRequest) ProtoMessage() {}

func (x *QueryMutualFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mutual_funds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMutualFundsRequest.ProtoReflect.Descriptor instead.
func (*QueryMutualFundsRequest) Descriptor() ([]byte, []int) {
	return file_mutual_funds_proto_rawDescGZIP(), []int{0}
}

func (x *QueryMutualFundsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

// Response for `count`.
type CountMutualFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of records.
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountMutualFundsResponse) Reset() {
	*x = CountMutualFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mutual_funds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMutualFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMutualFundsResponse) ProtoMessage() {}

func (x *CountMutualFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mutual_funds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMutualFundsResponse.ProtoReflect.Descriptor instead.
func (*CountMutualFundsResponse) Descriptor() ([]byte, []int) {
	return file_mutual_funds_proto_rawDescGZIP(), []int{1}
}

func (x *CountMutualFundsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Response for `query`.
type QueryMutualFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of records.
	Records []*MutualFundWithId `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *QueryMutualFundsResponse) Reset() {
	*x = QueryMutualFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mutual_funds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMutualFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMutualFundsResponse) ProtoMessage() {}

func (x *QueryMutualFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mutual_funds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMutualFundsResponse.ProtoReflect.Descriptor instead.
func (*QueryMutualFundsResponse) Descriptor() ([]byte, []int) {
	return file_mutual_funds_proto_rawDescGZIP(), []int{2}
}

func (x *QueryMutualFundsResponse) GetRecords() []*MutualFundWithId {
	if x != nil {
		return x.Records
	}
	return nil
}

// *
// MutualFund record type.
//
// Nullable fields will be generated as `optional` fields.
type MutualFund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fundname *string  `protobuf:"bytes,1,opt,name=fundname,proto3,oneof" json:"fundname,omitempty"`
	Mfid     int64    `protobuf:"varint,2,opt,name=mfid,proto3" json:"mfid,omitempty"`
	Returns  *float64 `protobuf:"fixed64,3,opt,name=returns,proto3,oneof" json:"returns,omitempty"`
	// Records with same primary key will have increasing version.
	XDozerRecordVersion uint32 `protobuf:"varint,4,opt,name=__dozer_record_version,json=DozerRecordVersion,proto3" json:"__dozer_record_version,omitempty"`
}

func (x *MutualFund) Reset() {
	*x = MutualFund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mutual_funds_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualFund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualFund) ProtoMessage() {}

func (x *MutualFund) ProtoReflect() protoreflect.Message {
	mi := &file_mutual_funds_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualFund.ProtoReflect.Descriptor instead.
func (*MutualFund) Descriptor() ([]byte, []int) {
	return file_mutual_funds_proto_rawDescGZIP(), []int{3}
}

func (x *MutualFund) GetFundname() string {
	if x != nil && x.Fundname != nil {
		return *x.Fundname
	}
	return ""
}

func (x *MutualFund) GetMfid() int64 {
	if x != nil {
		return x.Mfid
	}
	return 0
}

func (x *MutualFund) GetReturns() float64 {
	if x != nil && x.Returns != nil {
		return *x.Returns
	}
	return 0
}

func (x *MutualFund) GetXDozerRecordVersion() uint32 {
	if x != nil {
		return x.XDozerRecordVersion
	}
	return 0
}

// A record with its id in cache.
type MutualFundWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The record id.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The record data.
	Record *MutualFund `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *MutualFundWithId) Reset() {
	*x = MutualFundWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mutual_funds_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualFundWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualFundWithId) ProtoMessage() {}

func (x *MutualFundWithId) ProtoReflect() protoreflect.Message {
	mi := &file_mutual_funds_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualFundWithId.ProtoReflect.Descriptor instead.
func (*MutualFundWithId) Descriptor() ([]byte, []int) {
	return file_mutual_funds_proto_rawDescGZIP(), []int{4}
}

func (x *MutualFundWithId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MutualFundWithId) GetRecord() *MutualFund {
	if x != nil {
		return x.Record
	}
	return nil
}

var File_mutual_funds_proto protoreflect.FileDescriptor

var file_mutual_funds_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x30, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x75, 0x74,
	0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x4d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x75, 0x6e,
	0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x66,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x66, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a,
	0x16, 0x5f, 0x5f, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x44,
	0x6f, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0x64, 0x0a, 0x10, 0x4d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x4d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x32, 0xfd, 0x01, 0x0a, 0x0b, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x76, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x2e, 0x64, 0x6f, 0x7a, 0x65,
	0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x35, 0x2e, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x64, 0x6f, 0x7a, 0x65, 0x72,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x75, 0x74,
	0x75, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x20, 0x5a, 0x1e, 0x2e, 0x2f, 0x64, 0x6f, 0x7a, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mutual_funds_proto_rawDescOnce sync.Once
	file_mutual_funds_proto_rawDescData = file_mutual_funds_proto_rawDesc
)

func file_mutual_funds_proto_rawDescGZIP() []byte {
	file_mutual_funds_proto_rawDescOnce.Do(func() {
		file_mutual_funds_proto_rawDescData = protoimpl.X.CompressGZIP(file_mutual_funds_proto_rawDescData)
	})
	return file_mutual_funds_proto_rawDescData
}

var file_mutual_funds_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mutual_funds_proto_goTypes = []interface{}{
	(*QueryMutualFundsRequest)(nil),  // 0: dozer.generated.mutual_funds.QueryMutualFundsRequest
	(*CountMutualFundsResponse)(nil), // 1: dozer.generated.mutual_funds.CountMutualFundsResponse
	(*QueryMutualFundsResponse)(nil), // 2: dozer.generated.mutual_funds.QueryMutualFundsResponse
	(*MutualFund)(nil),               // 3: dozer.generated.mutual_funds.MutualFund
	(*MutualFundWithId)(nil),         // 4: dozer.generated.mutual_funds.MutualFundWithId
}
var file_mutual_funds_proto_depIdxs = []int32{
	4, // 0: dozer.generated.mutual_funds.QueryMutualFundsResponse.records:type_name -> dozer.generated.mutual_funds.MutualFundWithId
	3, // 1: dozer.generated.mutual_funds.MutualFundWithId.record:type_name -> dozer.generated.mutual_funds.MutualFund
	0, // 2: dozer.generated.mutual_funds.MutualFunds.count:input_type -> dozer.generated.mutual_funds.QueryMutualFundsRequest
	0, // 3: dozer.generated.mutual_funds.MutualFunds.query:input_type -> dozer.generated.mutual_funds.QueryMutualFundsRequest
	1, // 4: dozer.generated.mutual_funds.MutualFunds.count:output_type -> dozer.generated.mutual_funds.CountMutualFundsResponse
	2, // 5: dozer.generated.mutual_funds.MutualFunds.query:output_type -> dozer.generated.mutual_funds.QueryMutualFundsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mutual_funds_proto_init() }
func file_mutual_funds_proto_init() {
	if File_mutual_funds_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mutual_funds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMutualFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mutual_funds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMutualFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mutual_funds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMutualFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mutual_funds_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualFund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mutual_funds_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualFundWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mutual_funds_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_mutual_funds_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mutual_funds_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mutual_funds_proto_goTypes,
		DependencyIndexes: file_mutual_funds_proto_depIdxs,
		MessageInfos:      file_mutual_funds_proto_msgTypes,
	}.Build()
	File_mutual_funds_proto = out.File
	file_mutual_funds_proto_rawDesc = nil
	file_mutual_funds_proto_goTypes = nil
	file_mutual_funds_proto_depIdxs = nil
}

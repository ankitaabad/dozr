// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.0
// source: proto/dashboard.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TopMFService_GetTopMF_FullMethodName = "/proto.TopMFService/GetTopMF"
)

// TopMFServiceClient is the client API for TopMFService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TopMFServiceClient interface {
	GetTopMF(ctx context.Context, in *TopMFInput, opts ...grpc.CallOption) (*TopMF, error)
}

type topMFServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTopMFServiceClient(cc grpc.ClientConnInterface) TopMFServiceClient {
	return &topMFServiceClient{cc}
}

func (c *topMFServiceClient) GetTopMF(ctx context.Context, in *TopMFInput, opts ...grpc.CallOption) (*TopMF, error) {
	out := new(TopMF)
	err := c.cc.Invoke(ctx, TopMFService_GetTopMF_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopMFServiceServer is the server API for TopMFService service.
// All implementations must embed UnimplementedTopMFServiceServer
// for forward compatibility
type TopMFServiceServer interface {
	GetTopMF(context.Context, *TopMFInput) (*TopMF, error)
	mustEmbedUnimplementedTopMFServiceServer()
}

// UnimplementedTopMFServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTopMFServiceServer struct {
}

func (UnimplementedTopMFServiceServer) GetTopMF(context.Context, *TopMFInput) (*TopMF, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopMF not implemented")
}
func (UnimplementedTopMFServiceServer) mustEmbedUnimplementedTopMFServiceServer() {}

// UnsafeTopMFServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TopMFServiceServer will
// result in compilation errors.
type UnsafeTopMFServiceServer interface {
	mustEmbedUnimplementedTopMFServiceServer()
}

func RegisterTopMFServiceServer(s grpc.ServiceRegistrar, srv TopMFServiceServer) {
	s.RegisterService(&TopMFService_ServiceDesc, srv)
}

func _TopMFService_GetTopMF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopMFInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopMFServiceServer).GetTopMF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TopMFService_GetTopMF_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopMFServiceServer).GetTopMF(ctx, req.(*TopMFInput))
	}
	return interceptor(ctx, in, info, handler)
}

// TopMFService_ServiceDesc is the grpc.ServiceDesc for TopMFService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TopMFService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TopMFService",
	HandlerType: (*TopMFServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTopMF",
			Handler:    _TopMFService_GetTopMF_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/dashboard.proto",
}

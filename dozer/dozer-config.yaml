
version: 1

app_name: GrowthGenie2
home_dir: ./.dozer4
cache_dir: ./.dozer4/cache


   
connections:
  - config: !Postgres
      user: postgres
      password: pgpass
      # host: 68.183.85.136
      # port: 5689  
      host: srv-captain--pgdb
      port: 5432
      database: postgres
      schema: public
      sslmode: disable
    name: pgcon2

sources:
  - name: transactions 
    table_name: transactions
    connection:  pgcon2
  - name: stocks 
    table_name: stocks
    connection:  pgcon2
  - name: mutual_funds 
    table_name: mutual_funds
    connection:  pgcon2
  - name: stocks_daily_price 
    table_name: stocks_daily_price
    connection:  pgcon2
  - name: mf_daily_price 
    table_name: mf_daily_price
    connection:  pgcon2
  - name: customer_stocks 
    table_name: customer_stocks
    connection:  pgcon2
  - name: loans 
    table_name: loans
    connection:  pgcon2

  - name: customer_mf 
    table_name: customer_mf
    connection:  pgcon2
  - name: customers 
    table_name: customers
    connection:  pgcon2
  - name: mf_buy 
    table_name: mf_buy
    connection:  pgcon2
  - name: mf_sell 
    table_name: mf_sell
    connection:  pgcon2

  
   


sql: |
  select sdp."date" , sdp.stock_id ,round(sdp.daily_change,2) daily_change, sdp.price, s.company_name into dailyStocks from stocks_daily_price sdp join stocks s on sdp.stock_id = s.stock_id;
 
  select * into customer_stocks_nonzero from customer_stocks where quantity != 0;
  
  select customer_id, balance into customer_balance from customers;


  with stock_table  as ( select sum(cs.quantity * cs.avg_price) stock_investment,cs.customer_id from customer_stocks cs group by customer_id),
  mf_table as ( select sum(cm.quantity * cm.avg_price)mf_investment,cm.customer_id from customer_mf cm  group by customer_id)
  select  c.*, stock_investment+mf_investment as total_investment into top_investors from stock_table st join mf_table mf on st.customer_id = mf.customer_id join customers c on c.customer_id = mf.customer_id; 

  select count(*) count,stock_id into popular_stocks from stocks_buy sb group by stock_id, buy_date;

  select  cm.customer_id, cm.mf_id, cm.quantity ,cm.avg_price, mf.fund_name, mf.image_src  into customer_mutual_funds from customer_mf cm join mutual_funds mf on cm.mf_id  = mf.mf_id; 

  select  cs.customer_id , sum(cs.quantity* cs.avg_price) investment, sum(cs.quantity * s.price) present_value into customer_stock_investment_value from customer_stocks cs  join stocks s on cs.stock_id = s.stock_id  group by cs.customer_id ;

  select  cmf.customer_id , sum(cmf.quantity* cmf.avg_price) investment, sum(cmf.quantity * mf.price) present_value into customer_mf_investment_value from customer_mf cmf  join mutual_funds mf  on cmf.mf_id = mf.mf_id  group by cmf.customer_id ;

  WITH customerStocktInvestment AS (select  cs.customer_id , sum(cs.quantity* cs.avg_price) investment, sum(cs.quantity * s.price) present_value  from customer_stocks cs  join stocks s on cs.stock_id = s.stock_id  group by cs.customer_id),mutualFundInvestment AS (select  cmf.customer_id , sum(cmf.quantity* cmf.avg_price) investment, sum(cmf.quantity * mf.price) present_value from customer_mf cmf  join mutual_funds mf  on cmf.mf_id = mf.mf_id  group by cmf.customer_id  ) SELECT csi.customer_id, csi.investment + mfi.investment total_investment,csi.present_value+mfi.present_value total_present_value into customer_total_investment_value FROM customerStocktInvestment csi JOIN mutualFundInvestment mfi ON csi.customer_id = mfi.customer_id;


  
api:
  default_max_num_records: 99999999
  
    
endpoints: 

  - name: recent_transactions
    path: /recent_transactions
    table_name: transactions
    index:
      secondary:
        create:
          - !SortedInverted
              fields:
                - customer_id
                - date 

  - name: dailyStocks
    path: /dailyStocks
    table_name: dailyStocks
    index:
      secondary:
        create:
          - !SortedInverted
              fields:
                - date
                - daily_change

  - name: stocks
    path: /stocks
    table_name: stocks
    index:
      secondary:
        create:
          - !SortedInverted
              fields:
                - stock_id

  - name: customer_stock_investment_value
    path: /customer_stock_investment_value
    table_name: customer_stock_investment_value
    index:
      primary_key:
        - customer_id

  - name: customer_mf_investment_value
    path: /customer_mf_investment_value
    table_name: customer_mf_investment_value
    index:
      primary_key:
        - customer_id

  - name: customer_total_investment_value
    path: /customer_total_investment_value
    table_name: customer_total_investment_value
    index:
      primary_key:
        - customer_id               

  - name: mutual_funds
    path: /mutual_funds
    table_name: mutual_funds



  
  - name: customers
    path: /customers
    table_name: customers
    index:
      primary_key:
        - customer_id

  - name: customer_balance
    path: /customer_balance
    table_name: customer_balance


  - name: customer_stocks
    path: /customer_stocks
    table_name: customer_stocks_nonzero

  - name: popular_stocks
    path: /popular_stocks
    table_name: popular_stocks


  - name: top_investors
    path: /top_investors
    table_name: top_investors
    

  - name: loans
    path: /loans
    table_name: loans

  - name: customer_mutual_funds
    path: /customer_mutual_funds
    table_name: customer_mutual_funds

  - name: stocks_daily_price
    path: /stocks_daily_price
    table_name: stocks_daily_price
    index:
      secondary:
        create:
          - !SortedInverted
              fields:
                - date
                - yearly_change
  
  - name: mf_daily_price
    path: /mf_daily_price
    table_name: mf_daily_price
    index:
      secondary:
        create:
          - !SortedInverted
              fields:
                - date
                - yearly_change
      

  



